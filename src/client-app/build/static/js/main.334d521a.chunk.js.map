{"version":3,"sources":["store/ducks/Books/types.ts","components/Home/index.tsx","store/ducks/Books/action.ts","components/Livros/index.tsx","routes/index.tsx","store/ducks/Books/index.ts","store/ducks/rootReducer.ts","services/api.ts","store/ducks/Books/sagas.ts","store/ducks/rootSaga.ts","store/index.ts","components/Shared/NavMenu/style.ts","components/Shared/NavMenu/index.tsx","components/Shared/Layout/index.tsx","App.tsx","styles/GlobalStyles.ts","index.tsx"],"names":["BooksTypes","Home","loadRequest","action","LOAD_REQUEST","loadSuccess","data","LOAD_SUCCESS","loadFailure","LOAD_FAILURE","Livros","this","props","books","className","aria-labelledby","length","map","book","key","id","title","author","name","createdAt","colSpan","align","renderDataTable","Component","connect","state","dispatch","bindActionCreators","BooksActions","Routes","component","path","exact","INITIAL_STATE","error","loading","reducer","type","payload","combineReducers","api","axios","create","baseURL","process","console","log","load","call","get","response","put","rootSaga","all","takeLatest","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","run","NavContainer","styled","div","NavMenu","isOpen","toggle","setState","Navbar","bg","expand","Container","Brand","as","Link","to","Toggle","aria-controls","Collapse","Nav","Form","inline","FormControl","placeholder","Button","variant","React","children","App","Layout","createGlobalStyle","ReactDOM","render","StrictMode","GlobalStyles","document","getElementById"],"mappings":"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","file":"static/js/main.334d521a.chunk.js","sourcesContent":["import { Status } from '../Util/enums';\r\nimport { Author } from '../Authors/types';\r\n\r\nexport enum BooksTypes {\r\n    LOAD_REQUEST = \"@books/LOAD_REQUEST\",\r\n    LOAD_SUCCESS = \"@books/LOAD_SUCCESS\",\r\n    LOAD_FAILURE = \"@books/LOAD_FAILURE\",\r\n}\r\n\r\nexport interface Book {\r\n    id: number;\r\n    title: string;\r\n    authorId: number;\r\n    author: Author;\r\n    createdAt: Date;\r\n    updatedAt: Date;\r\n    status: Status;\r\n}\r\n\r\nexport interface BooksState {\r\n    data: Book[];\r\n    loading: boolean;\r\n    error: boolean;\r\n}","import * as React from 'react';\r\n\r\n\r\nconst Home = () => (\r\n    <div>\r\n        <h1>Sistema de gestão de livros</h1>\r\n    </div>\r\n)\r\n\r\nexport default Home;","import { action } from \"typesafe-actions\";\r\nimport { BooksTypes, Book } from './types';\r\n\r\nexport const loadRequest = () => action(BooksTypes.LOAD_REQUEST);\r\nexport const loadSuccess = (data: Book[]) => action(BooksTypes.LOAD_SUCCESS, { data });\r\nexport const loadFailure = () => action(BooksTypes.LOAD_FAILURE);","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators, Dispatch } from \"redux\";\r\nimport * as BooksActions from \"../../store/ducks/Books/action\";\r\nimport { ApplicationState } from \"../../store\";\r\nimport { Book } from '../../store/ducks/Books/types';\r\n\r\ninterface StateProps {\r\n    books: Book[];\r\n}\r\n\r\ninterface DispatchProps {\r\n    loadRequest(): void;\r\n}\r\n\r\ntype Props = StateProps & DispatchProps;\r\n\r\n\r\nclass Livros extends Component<Props> {\r\n\r\n    componentDidMount() {        \r\n        const { loadRequest } = this.props;\r\n        loadRequest();\r\n    }\r\n\r\n    render() {\r\n\r\n        const renderDataTable = (books: Book[]) => {\r\n            debugger;\r\n            if(books && books.length > 0) {\r\n                return (\r\n                    books.map((book: Book) => (\r\n                        <tr key={book.id}>\r\n                            <td>{book.title}</td>\r\n                            <td>{book.author ?  book.author.name : 'Indefinido'}</td>\r\n                            <td>{'Indefinido'}</td>\r\n                            <td>{book.createdAt}</td>\r\n                        </tr>\r\n                    ))\r\n                )\r\n            } else {\r\n                return (\r\n                    <tr>\r\n                        <td colSpan={4} align=\"center\">Nenhum dado encontrado</td>\r\n                    </tr>\r\n                )\r\n            }\r\n        }\r\n\r\n        const { books } = this.props;\r\n        return (\r\n            <table className='table table-striped' aria-labelledby=\"tabelLabel\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Título</th>\r\n                        <th>Autor</th>\r\n                        <th>Gêneros</th>\r\n                        <th>Data Cadastro</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {renderDataTable(books)}\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: ApplicationState) => ({\r\n    books: state.books.data,\r\n});\r\n    \r\nconst mapDispatchToProps = (dispatch: Dispatch) =>\r\n  bindActionCreators(BooksActions, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Livros);","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Home from \"../components/Home\";\r\nimport Livros from \"../components/Livros\";\r\n\r\nconst Routes = () => (\r\n    <Switch>\r\n        <Route component={Home} path=\"/\" exact />\r\n        <Route component={Home} path=\"/home\" />\r\n        <Route component={Livros} path=\"/livros\" />\r\n    </Switch>\r\n)\r\n\r\nexport default Routes;","import { BooksState, BooksTypes } from './types';\r\nimport { Reducer } from \"redux\";\r\n\r\nconst INITIAL_STATE: BooksState = {\r\n    data: [],\r\n    error: false,\r\n    loading: false,\r\n};\r\n\r\nconst reducer: Reducer<BooksState> = (state: BooksState = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case BooksTypes.LOAD_REQUEST:\r\n            return { ...state, loading: true };\r\n        case BooksTypes.LOAD_SUCCESS: \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: false,\r\n                data: action.payload.data,\r\n            };\r\n        case BooksTypes.LOAD_FAILURE:\r\n            return { ...state, loading: false, error: true, data: [] };\r\n        default: \r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import { combineReducers } from \"redux\";\r\nimport books from \"./Books\";\r\nexport default combineReducers({\r\n    books,\r\n});","import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n    baseURL: process.env.REACT_APP_API_URL,\r\n});\r\n\r\nconsole.log(`address api: ${process.env.REACT_APP_API_URL} ` );\r\n  \r\nexport default api;","import { AxiosResponse } from \"axios\";\r\nimport { call, put } from \"redux-saga/effects\";\r\nimport api from \"../../../services/api\";\r\nimport { loadSuccess, loadFailure } from \"./action\";\r\nimport { Book } from './types';\r\n\r\nexport function* load() {\r\n    try {\r\n      const response: AxiosResponse<Book[]> = yield call(api.get, \"book\");\r\n      console.log(response);\r\n      yield put(loadSuccess(response.data));\r\n    } catch (err) {\r\n      yield put(loadFailure());\r\n    }\r\n  }\r\n  ","import { all, AllEffect, ForkEffect, takeLatest } from \"redux-saga/effects\";\r\nimport { BooksTypes } from \"./Books/types\";\r\nimport { load } from \"./Books/sagas\";\r\n\r\nexport default function* rootSaga(): Generator<AllEffect<ForkEffect<never>>> {\r\n    return yield all([takeLatest(BooksTypes.LOAD_REQUEST, load)]);\r\n}\r\n  ","import { createStore, applyMiddleware, Store } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { BooksState } from \"./ducks/Books/types\";\r\nimport rootReducer from \"./ducks/rootReducer\";\r\nimport rootSaga from \"./ducks/rootSaga\";\r\n\r\nexport interface ApplicationState {\r\n    books: BooksState;\r\n}\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store: Store<ApplicationState> = createStore(\r\n    rootReducer,\r\n    applyMiddleware(sagaMiddleware)\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;","import styled from \"styled-components\";\r\n\r\nexport const NavContainer = styled.div`\r\n    \r\n    header {\r\n        color: white;\r\n    }\r\n\r\n    a.navbar-brand {\r\n    white-space: normal;\r\n    text-align: center;\r\n    word-break: break-all;\r\n    }\r\n\r\n    html { font-size: 25px; }\r\n\r\n    @media (min-width: 768px) {\r\n        html { font-size: 16px; }\r\n    }\r\n\r\n    .box-shadow { box-shadow: 0 .25rem .75rem rgba(0, 0, 0, .05); }\r\n\r\n`;\r\n  \r\n\r\n","import * as React from 'react';\r\nimport { Navbar, Nav, Form, FormControl, Button, Container } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { NavContainer } from './style';\r\n\r\nexport default class  NavMenu extends React.PureComponent<{}, { isOpen: boolean }> {\r\n    public state = {\r\n        isOpen: false\r\n    };\r\n\r\n    public render() {\r\n        return (\r\n            <header>\r\n                <NavContainer>\r\n                    <Navbar bg=\"dark\" expand=\"lg\">\r\n                        <Container>\r\n                            <Navbar.Brand as={Link} to=\"/\" >Books-Management</Navbar.Brand>\r\n                            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                                <Nav className=\"mr-auto\">\r\n                                <Nav.Link as={Link} to=\"/home\" >Home</Nav.Link>\r\n                                <Nav.Link as={Link} to=\"/livros\">Livros</Nav.Link>\r\n                                {/* <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n                                    <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                                    <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                                    <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                                    <NavDropdown.Divider />\r\n                                    <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n                                </NavDropdown> */}\r\n                                </Nav>\r\n                                <Form inline>\r\n                                <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n                                <Button variant=\"outline-success\">Search</Button>\r\n                                </Form>\r\n                            </Navbar.Collapse>\r\n                        </Container>\r\n                    </Navbar>\r\n                </NavContainer>\r\n            </header>\r\n        );\r\n    }\r\n\r\n    private toggle = () => {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        });\r\n    }\r\n}","import * as React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport NavMenu from '../NavMenu';\r\n\r\nexport default (props: { children?: React.ReactNode }) => (\r\n    <React.Fragment>\r\n        <NavMenu/>\r\n        <Container>\r\n            {props.children}\r\n        </Container>\r\n    </React.Fragment>\r\n);\r\n","import React, { Component } from 'react';\r\nimport { Provider } from \"react-redux\";\r\nimport Routes from './routes';\r\nimport store from \"./store\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport Layout from './components/Shared/Layout';\r\n\r\n\r\nconst App = () => (\r\n  <Provider store = {store}>\r\n    <BrowserRouter>\r\n      <Layout>\r\n        <Routes/>\r\n      </Layout>\r\n    </BrowserRouter>\r\n  </Provider>\r\n)\r\n\r\nexport default App;\r\n\r\n","import { createGlobalStyle } from 'styled-components';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport default createGlobalStyle`\r\n  * {\r\n      margin: 0;\r\n      padding: 0;\r\n      box-sizing: border-box;\r\n  }\r\n  html, body, #root {\r\n      max-height: 100vh;\r\n      max-width: 100vw;\r\n\r\n      width: 100%;\r\n      height: 100%;\r\n  }\r\n  *, button, input {\r\n      border: 0;\r\n      background: none;\r\n      font-family: --apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport GlobalStyles from './styles/GlobalStyles';\r\n\r\n// Create browser history to use in the Redux store\r\n\r\n// Get the application-wide store instance, prepopulating with state from the server where available.\r\n// const store = configureStore(history);\r\n\r\nReactDOM.render( \r\n  <React.StrictMode>\r\n    <GlobalStyles/>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}